# ===============================================
# PhishNet Production Dockerfile
# Version: 1.0
# Created: August 8, 2025
# Description: Optimized production build for PhishNet
# ===============================================

# Build stage
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git

# Copy package files (monorepo has single package.json)
COPY package*.json ./

# Install all dependencies (including devDependencies for build)
RUN npm ci --ignore-scripts

# Copy source code
COPY . .

# Build application (vite builds client, esbuild builds server)
RUN npm run build

# Production stage
FROM node:18-alpine AS production

# Create app user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S phishnet -u 1001

# Set working directory
WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache \
    curl \
    postgresql-client \
    redis

# Copy package files and install only production dependencies
COPY --from=builder --chown=phishnet:nodejs /app/package*.json ./
RUN npm ci --production --ignore-scripts && npm cache clean --force

# Copy built application
COPY --from=builder --chown=phishnet:nodejs /app/dist ./dist
COPY --from=builder --chown=phishnet:nodejs /app/shared ./shared

# Copy necessary files
COPY --chown=phishnet:nodejs uploads ./uploads

# Create directories
RUN mkdir -p /app/logs /app/uploads/images /app/uploads/attachments /app/uploads/temp && \
    chown -R phishnet:nodejs /app/logs /app/uploads

# Switch to non-root user
USER phishnet

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:3001/health || exit 1

# Start application
CMD ["npm", "start"]