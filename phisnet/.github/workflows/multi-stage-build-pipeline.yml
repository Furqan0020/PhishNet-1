name: 🏗️ Multi-Stage Build Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  build-stage-1:
    runs-on: ubuntu-latest
    outputs:
      build-success: ${{ steps.build.outputs.success }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          cd client && npm ci
          cd ../server && npm ci
          
      - name: Build stage 1
        id: build
        run: |
          echo "🏗️ Building client application"
          cd client && npm run build
          echo "success=true" >> $GITHUB_OUTPUT

  build-stage-2:
    runs-on: ubuntu-latest
    needs: build-stage-1
    if: needs.build-stage-1.outputs.build-success == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Build stage 2
        run: |
          echo "🏗️ Building server application"
          cd server && npm run build
          
      - name: Create build summary
        run: |
          echo "## 🏗️ Multi-Stage Build Report" >> $GITHUB_STEP_SUMMARY
          echo "- **Stage 1**: ✅ Client Build PASSED" >> $GITHUB_STEP_SUMMARY
          echo "- **Stage 2**: ✅ Server Build PASSED" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ✅ PIPELINE COMPLETED" >> $GITHUB_STEP_SUMMARY